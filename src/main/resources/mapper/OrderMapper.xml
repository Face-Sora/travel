<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mingqi.goTravel.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.mingqi.goTravel.pojo.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="orderNum" jdbcType="INTEGER" property="ordernum" />
    <result column="orderTime" jdbcType="DATE" property="ordertime" />
    <result column="peopleCount" jdbcType="INTEGER" property="peoplecount" />
    <result column="orderDesc" jdbcType="VARCHAR" property="orderdesc" />
    <result column="payType" jdbcType="INTEGER" property="paytype" />
    <result column="orderStatus" jdbcType="INTEGER" property="orderstatus" />
    <result column="productId" jdbcType="INTEGER" property="productid" />
    <result column="memberId" jdbcType="INTEGER" property="memberid" />
    <association property="product" javaType="com.mingqi.goTravel.pojo.Product">
    	<id column="id" jdbcType="INTEGER" property="id" />
    	<result column="productNum" jdbcType="INTEGER" property="productnum" />
	    <result column="productName" jdbcType="VARCHAR" property="productname" />
	    <result column="cityName" jdbcType="VARCHAR" property="cityname" />
	    <result column="goTime" jdbcType="DATE" property="gotime" />
	    <result column="productPrice" jdbcType="INTEGER" property="productprice" />
	    <result column="productDesc" jdbcType="VARCHAR" property="productdesc" />
	    <result column="productStatus" jdbcType="INTEGER" property="productstatus" />
    </association>
    <association property="member" javaType="com.mingqi.goTravel.pojo.Member">
    	<id column="id" jdbcType="INTEGER" property="id" />
	    <result column="name" jdbcType="VARCHAR" property="name" />
	    <result column="nickName" jdbcType="VARCHAR" property="nickname" />
	    <result column="phoneNum" jdbcType="VARCHAR" property="phonenum" />
	    <result column="email" jdbcType="VARCHAR" property="email" />
    </association>
    <collection property="tourists" ofType="com.mingqi.goTravel.pojo.Tourist">
    	<id column="t_id" jdbcType="INTEGER" property="id" />
	    <result column="t_name" jdbcType="VARCHAR" property="name" />
	    <result column="t_sex" jdbcType="INTEGER" property="sex" />
	    <result column="t_phone" jdbcType="VARCHAR" property="phone" />
	    <result column="t_cardtype" jdbcType="INTEGER" property="cardtype" />
	    <result column="t_cardnum" jdbcType="VARCHAR" property="cardnum" />
	    <result column="t_tt" jdbcType="INTEGER" property="touristtype" />
    </collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    orders.id, orderNum, orderTime, peopleCount, orderDesc, payType, orderStatus, productId, 
    memberId
  </sql>
  <sql id="Product_Column_List">
    pro.id, pro.productNum, pro.productName, pro.cityName, pro.goTime, pro.productDesc, pro.productStatus, pro.productPrice
  </sql>
  <sql id="Member_Column_List">
    mem.id, mem.name, mem.nickName, mem.phoneNum, mem.email
  </sql>
  <sql id="Tourist_Column_List">
    tou.id t_id, tou.name t_name, tou.sex t_sex,tou.phone t_phone, tou.cardType t_cardtype, tou.cardNum t_cardnum, tou.touristType t_tt
  </sql>
  <select id="selectByExample" parameterType="com.mingqi.goTravel.pojo.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" /> , <include refid="Product_Column_List" />, <include refid="Member_Column_List" />
    from orders left join product as pro on orders.productId = pro.id left join member as mem on orders.memberId = mem.id
   <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
   	<include refid="Base_Column_List" /> , <include refid="Product_Column_List" />, <include refid="Member_Column_List" />,<include refid="Tourist_Column_List" />
    from order_tourist ot 
    left join orders on orders.id = ot.orderId 
    left join member mem on orders.id = mem.id 
    left join product pro on orders.productId = pro.id
    left join tourist tou on ot.touristId = tou.id
    where orders.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mingqi.goTravel.pojo.OrderExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mingqi.goTravel.pojo.Order">
    insert into orders (id, orderNum, orderTime, 
      peopleCount, orderDesc, payType, 
      orderStatus, productId, memberId
      )
    values (#{id,jdbcType=INTEGER}, #{ordernum,jdbcType=INTEGER}, #{ordertime,jdbcType=DATE}, 
      #{peoplecount,jdbcType=INTEGER}, #{orderdesc,jdbcType=VARCHAR}, #{paytype,jdbcType=INTEGER}, 
      #{orderstatus,jdbcType=INTEGER}, #{productid,jdbcType=INTEGER}, #{memberid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mingqi.goTravel.pojo.Order">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ordernum != null">
        orderNum,
      </if>
      <if test="ordertime != null">
        orderTime,
      </if>
      <if test="peoplecount != null">
        peopleCount,
      </if>
      <if test="orderdesc != null">
        orderDesc,
      </if>
      <if test="paytype != null">
        payType,
      </if>
      <if test="orderstatus != null">
        orderStatus,
      </if>
      <if test="productid != null">
        productId,
      </if>
      <if test="memberid != null">
        memberId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="ordernum != null">
        #{ordernum,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null">
        #{ordertime,jdbcType=DATE},
      </if>
      <if test="peoplecount != null">
        #{peoplecount,jdbcType=INTEGER},
      </if>
      <if test="orderdesc != null">
        #{orderdesc,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null">
        #{paytype,jdbcType=INTEGER},
      </if>
      <if test="orderstatus != null">
        #{orderstatus,jdbcType=INTEGER},
      </if>
      <if test="productid != null">
        #{productid,jdbcType=INTEGER},
      </if>
      <if test="memberid != null">
        #{memberid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mingqi.goTravel.pojo.OrderExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.ordernum != null">
        orderNum = #{record.ordernum,jdbcType=INTEGER},
      </if>
      <if test="record.ordertime != null">
        orderTime = #{record.ordertime,jdbcType=DATE},
      </if>
      <if test="record.peoplecount != null">
        peopleCount = #{record.peoplecount,jdbcType=INTEGER},
      </if>
      <if test="record.orderdesc != null">
        orderDesc = #{record.orderdesc,jdbcType=VARCHAR},
      </if>
      <if test="record.paytype != null">
        payType = #{record.paytype,jdbcType=INTEGER},
      </if>
      <if test="record.orderstatus != null">
        orderStatus = #{record.orderstatus,jdbcType=INTEGER},
      </if>
      <if test="record.productid != null">
        productId = #{record.productid,jdbcType=INTEGER},
      </if>
      <if test="record.memberid != null">
        memberId = #{record.memberid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set id = #{record.id,jdbcType=INTEGER},
      orderNum = #{record.ordernum,jdbcType=INTEGER},
      orderTime = #{record.ordertime,jdbcType=DATE},
      peopleCount = #{record.peoplecount,jdbcType=INTEGER},
      orderDesc = #{record.orderdesc,jdbcType=VARCHAR},
      payType = #{record.paytype,jdbcType=INTEGER},
      orderStatus = #{record.orderstatus,jdbcType=INTEGER},
      productId = #{record.productid,jdbcType=INTEGER},
      memberId = #{record.memberid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mingqi.goTravel.pojo.Order">
    update orders
    <set>
      <if test="ordernum != null">
        orderNum = #{ordernum,jdbcType=INTEGER},
      </if>
      <if test="ordertime != null">
        orderTime = #{ordertime,jdbcType=DATE},
      </if>
      <if test="peoplecount != null">
        peopleCount = #{peoplecount,jdbcType=INTEGER},
      </if>
      <if test="orderdesc != null">
        orderDesc = #{orderdesc,jdbcType=VARCHAR},
      </if>
      <if test="paytype != null">
        payType = #{paytype,jdbcType=INTEGER},
      </if>
      <if test="orderstatus != null">
        orderStatus = #{orderstatus,jdbcType=INTEGER},
      </if>
      <if test="productid != null">
        productId = #{productid,jdbcType=INTEGER},
      </if>
      <if test="memberid != null">
        memberId = #{memberid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mingqi.goTravel.pojo.Order">
    update orders
    set orderNum = #{ordernum,jdbcType=INTEGER},
      orderTime = #{ordertime,jdbcType=DATE},
      peopleCount = #{peoplecount,jdbcType=INTEGER},
      orderDesc = #{orderdesc,jdbcType=VARCHAR},
      payType = #{paytype,jdbcType=INTEGER},
      orderStatus = #{orderstatus,jdbcType=INTEGER},
      productId = #{productid,jdbcType=INTEGER},
      memberId = #{memberid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>